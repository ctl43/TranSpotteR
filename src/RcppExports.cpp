// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// overlapper
Rcpp::DataFrame overlapper(std::vector< std::string > seq1_set, std::vector< std::string > seq2_set);
RcppExport SEXP _TranSpotteR_overlapper(SEXP seq1_setSEXP, SEXP seq2_setSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::vector< std::string > >::type seq1_set(seq1_setSEXP);
    Rcpp::traits::input_parameter< std::vector< std::string > >::type seq2_set(seq2_setSEXP);
    rcpp_result_gen = Rcpp::wrap(overlapper(seq1_set, seq2_set));
    return rcpp_result_gen;
END_RCPP
}
// replcae_space
Rcpp::StringVector replcae_space(std::vector<std::string> x);
RcppExport SEXP _TranSpotteR_replcae_space(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::vector<std::string> >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(replcae_space(x));
    return rcpp_result_gen;
END_RCPP
}
// t_coffee
Rcpp::StringVector t_coffee(std::vector<std::string> strings, int match_score, int mismatch_score, int gap_ext_score, int gap_open_score);
RcppExport SEXP _TranSpotteR_t_coffee(SEXP stringsSEXP, SEXP match_scoreSEXP, SEXP mismatch_scoreSEXP, SEXP gap_ext_scoreSEXP, SEXP gap_open_scoreSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::vector<std::string> >::type strings(stringsSEXP);
    Rcpp::traits::input_parameter< int >::type match_score(match_scoreSEXP);
    Rcpp::traits::input_parameter< int >::type mismatch_score(mismatch_scoreSEXP);
    Rcpp::traits::input_parameter< int >::type gap_ext_score(gap_ext_scoreSEXP);
    Rcpp::traits::input_parameter< int >::type gap_open_score(gap_open_scoreSEXP);
    rcpp_result_gen = Rcpp::wrap(t_coffee(strings, match_score, mismatch_score, gap_ext_score, gap_open_score));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_TranSpotteR_overlapper", (DL_FUNC) &_TranSpotteR_overlapper, 2},
    {"_TranSpotteR_replcae_space", (DL_FUNC) &_TranSpotteR_replcae_space, 1},
    {"_TranSpotteR_t_coffee", (DL_FUNC) &_TranSpotteR_t_coffee, 5},
    {NULL, NULL, 0}
};

RcppExport void R_init_TranSpotteR(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
